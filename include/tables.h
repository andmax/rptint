/**
 *
 *    Render Volume GPU
 *
 *  File: tables.h
 *
 *  Authors:
 *    Andre Maximo
 *    Ricardo Marroquim
 *
 *  Last Update: Feb 03, 2006
 *
 */

//
//  Basis Graph:
//
//       v2
//
//   v3  v4  v1
//
//       v0
//

//--------- ORDER TABLE ----------------
// Do not use this for triangle fan
// Mind the table!

const GLuint order_table[81][4] =
{ // (c1, c2, c3, c4) # Ternary - # Decimal - Case
 { 0, 3, 2, 1 } // 0 0 0 0 - 0 - 12
,{ 0, 3, 2, 1 } // 0 0 0 1 - 1 - 18
,{ 0, 3, 2, 1 } // 0 0 0 2 - 2 - 6
,{ 1, 0, 3, 2 } // 0 0 1 0 - 3 - 25
,{ 2, 3, 0, 1 } // 0 0 1 1 - 4 - 40
,{ 1, 0, 2, 3 } // 0 0 1 2 - 5 - 23
,{ 0, 2, 3, 1 } // 0 0 2 0 - 6 - 8
,{ 0, 2, 3, 1 } // 0 0 2 1 - 7 - 20
,{ 0, 2, 3, 1 } // 0 0 2 2 - 8 - 14
,{ 2, 1, 0, 3 } // 0 1 0 0 - 9 - 27
,{ 0, 0, 0, 0 } // 0 1 0 1 - 10
,{ 0, 0, 0, 0 } // 0 1 0 2 - 11
,{ 0, 3, 2, 1 } // 0 1 1 0 - 12 - 46
,{ 0, 0, 0, 0 } // 0 1 1 1 - 13
,{ 0, 0, 0, 0 } // 0 1 1 2 - 14
,{ 2, 1, 3, 0 } // 0 1 2 0 - 15 - 32
,{ 1, 3, 0, 2 } // 0 1 2 1 - 16 - 41
,{ 2, 3, 1, 0 } // 0 1 2 2 - 17 - 30
,{ 1, 3, 0, 2 } // 0 2 0 0 - 18 - 2
,{ 0, 0, 0, 0 } // 0 2 0 1 - 19
,{ 0, 0, 0, 0 } // 0 2 0 2 - 20
,{ 1, 3, 0, 2 } // 0 2 1 0 - 21 - 22
,{ 0, 0, 0, 0 } // 0 2 1 1 - 22
,{ 0, 0, 0, 0 } // 0 2 1 2 - 23
,{ 0, 2, 1, 3 } // 0 2 2 0 - 24 - 9
,{ 0, 2, 1, 3 } // 0 2 2 1 - 25 - 15
,{ 0, 2, 1, 3 } // 0 2 2 2 - 26 - 3
,{ 3, 2, 1, 0 } // 1 0 0 0 - 27 - 36
,{ 1, 2, 0, 3 } // 1 0 0 1 - 28 - 43
,{ 3, 1, 2, 0 } // 1 0 0 2 - 29 - 38
,{ 0, 0, 0, 0 } // 1 0 1 0 - 30
,{ 0, 0, 0, 0 } // 1 0 1 1 - 31
,{ 0, 2, 3, 1 } // 1 0 1 2 - 32 - 48
,{ 0, 0, 0, 0 } // 1 0 2 0 - 33
,{ 0, 0, 0, 0 } // 1 0 2 1 - 34
,{ 3, 1, 0, 2 } // 1 0 2 2 - 35 - 33
,{ 0, 1, 3, 2 } // 1 1 0 0 - 36 - 50
,{ 0, 0, 0, 0 } // 1 1 0 1 - 37
,{ 0, 0, 0, 0 } // 1 1 0 2 - 38
,{ 0, 0, 0, 0 } // 1 1 1 0 - 39
,{ 0, 0, 0, 0 } // 1 1 1 1 - 40
,{ 0, 0, 0, 0 } // 1 1 1 2 - 41
,{ 0, 0, 0, 0 } // 1 1 2 0 - 42
,{ 0, 0, 0, 0 } // 1 1 2 1 - 43
,{ 0, 1, 2, 3 } // 1 1 2 2 - 44 - 49
,{ 3, 2, 0, 1 } // 1 2 0 0 - 45 - 34
,{ 0, 0, 0, 0 } // 1 2 0 1 - 46
,{ 0, 0, 0, 0 } // 1 2 0 2 - 47
,{ 0, 2, 1, 3 } // 1 2 1 0 - 48 - 47
,{ 0, 0, 0, 0 } // 1 2 1 1 - 49
,{ 0, 0, 0, 0 } // 1 2 1 2 - 50
,{ 3, 0, 2, 1 } // 1 2 2 0 - 51 - 37
,{ 1, 2, 3, 0 } // 1 2 2 1 - 52 - 44
,{ 3, 0, 1, 2 } // 1 2 2 2 - 53 - 35
,{ 0, 3, 1, 2 } // 2 0 0 0 - 54 - 4
,{ 0, 3, 1, 2 } // 2 0 0 1 - 55 - 16
,{ 0, 3, 1, 2 } // 2 0 0 2 - 56 - 10
,{ 0, 0, 0, 0 } // 2 0 1 0 - 57
,{ 0, 0, 0, 0 } // 2 0 1 1 - 58
,{ 1, 2, 0, 3 } // 2 0 1 2 - 59 - 21
,{ 0, 0, 0, 0 } // 2 0 2 0 - 60
,{ 0, 0, 0, 0 } // 2 0 2 1 - 61
,{ 1, 2, 0, 3 } // 2 0 2 2 - 62 - 1
,{ 2, 0, 1, 3 } // 2 1 0 0 - 63 - 29
,{ 1, 3, 2, 0 } // 2 1 0 1 - 64 - 42
,{ 2, 0, 3, 1 } // 2 1 0 2 - 65 - 31
,{ 0, 0, 0, 0 } // 2 1 1 0 - 66
,{ 0, 0, 0, 0 } // 2 1 1 1 - 67
,{ 0, 3, 1, 2 } // 2 1 1 2 - 68 - 45
,{ 0, 0, 0, 0 } // 2 1 2 0 - 69
,{ 0, 0, 0, 0 } // 2 1 2 1 - 70
,{ 2, 3, 0, 1 } // 2 1 2 2 - 71 - 28
,{ 0, 1, 3, 2 } // 2 2 0 0 - 72 - 13
,{ 0, 1, 3, 2 } // 2 2 0 1 - 73 - 19
,{ 0, 1, 3, 2 } // 2 2 0 2 - 74 - 7
,{ 1, 3, 2, 0 } // 2 2 1 0 - 75 - 24
,{ 2, 3, 1, 0 } // 2 2 1 1 - 76 - 39
,{ 1, 2, 3, 0 } // 2 2 1 2 - 77 - 26
,{ 0, 1, 2, 3 } // 2 2 2 0 - 78 - 5
,{ 0, 1, 2, 3 } // 2 2 2 1 - 79 - 17
,{ 0, 1, 2, 3 } // 2 2 2 2 - 80 - 11
};

//--------- TRIANGLE FAN TABLE ----------------

const GLint triangle_fan_order_table[81][6] =
{ // (c1, c2, c3, c4) # Ternary - # Decimal - Case
 { -1,  0,  3,  2,  1,  0 } // 0 0 0 0 - 0 - 12
,{  2,  1,  0,  3,  9,  9 } // 0 0 0 1 - 1 - 18
,{  2,  0,  3,  1,  0,  9 } // 0 0 0 2 - 2 - 6
,{  3,  2,  1,  0,  9,  9 } // 0 0 1 0 - 3 - 25
,{  2,  1,  0,  9,  9,  9 } // 0 0 1 1 - 4 - 40
,{  2,  3,  1,  0,  9,  9 } // 0 0 1 2 - 5 - 23
,{  3,  0,  2,  1,  0,  9 } // 0 0 2 0 - 6 - 8
,{  3,  1,  0,  2,  9,  9 } // 0 0 2 1 - 7 - 20
,{ -1,  0,  2,  3,  1,  0 } // 0 0 2 2 - 8 - 14
,{  0,  3,  2,  1,  9,  9 } // 0 1 0 0 - 9 - 27
,{  9,  9,  9,  9,  9,  9 } // 0 1 0 1 - 10
,{  9,  9,  9,  9,  9,  9 } // 0 1 0 2 - 11
,{  0,  2,  1,  9,  9,  9 } // 0 1 1 0 - 12 - 46
,{  9,  9,  9,  9,  9,  9 } // 0 1 1 1 - 13
,{  9,  9,  9,  9,  9,  9 } // 0 1 1 2 - 14
,{  3,  0,  2,  1,  9,  9 } // 0 1 2 0 - 15 - 32
,{  1,  0,  2,  9,  9,  9 } // 0 1 2 1 - 16 - 41
,{  1,  0,  2,  3,  9,  9 } // 0 1 2 2 - 17 - 30
,{  0,  1,  3,  2,  1,  9 } // 0 2 0 0 - 18 - 2
,{  9,  9,  9,  9,  9,  9 } // 0 2 0 1 - 19
,{  9,  9,  9,  9,  9,  9 } // 0 2 0 2 - 20
,{  0,  2,  1,  3,  9,  9 } // 0 2 1 0 - 21 - 22
,{  9,  9,  9,  9,  9,  9 } // 0 2 1 1 - 22
,{  9,  9,  9,  9,  9,  9 } // 0 2 1 2 - 23
,{ -1,  0,  2,  1,  3,  0 } // 0 2 2 0 - 24 - 9
,{  1,  3,  0,  2,  9,  9 } // 0 2 2 1 - 25 - 15
,{  1,  0,  2,  3,  0,  9 } // 0 2 2 2 - 26 - 3
,{  1,  0,  3,  2,  9,  9 } // 1 0 0 0 - 27 - 36
,{  1,  0,  3,  9,  9,  9 } // 1 0 0 1 - 28 - 43
,{  2,  0,  3,  1,  9,  9 } // 1 0 0 2 - 29 - 38
,{  9,  9,  9,  9,  9,  9 } // 1 0 1 0 - 30
,{  9,  9,  9,  9,  9,  9 } // 1 0 1 1 - 31
,{  0,  3,  1,  9,  9,  9 } // 1 0 1 2 - 32 - 48
,{  9,  9,  9,  9,  9,  9 } // 1 0 2 0 - 33
,{  9,  9,  9,  9,  9,  9 } // 1 0 2 1 - 34
,{  0,  2,  3,  1,  9,  9 } // 1 0 2 2 - 35 - 33
,{  0,  3,  2,  9,  9,  9 } // 1 1 0 0 - 36 - 50
,{  9,  9,  9,  9,  9,  9 } // 1 1 0 1 - 37
,{  9,  9,  9,  9,  9,  9 } // 1 1 0 2 - 38
,{  9,  9,  9,  9,  9,  9 } // 1 1 1 0 - 39
,{  9,  9,  9,  9,  9,  9 } // 1 1 1 1 - 40
,{  9,  9,  9,  9,  9,  9 } // 1 1 1 2 - 41
,{  9,  9,  9,  9,  9,  9 } // 1 1 2 0 - 42
,{  9,  9,  9,  9,  9,  9 } // 1 1 2 1 - 43
,{  0,  2,  3,  9,  9,  9 } // 1 1 2 2 - 44 - 49
,{  0,  1,  3,  2,  9,  9 } // 1 2 0 0 - 45 - 34
,{  9,  9,  9,  9,  9,  9 } // 1 2 0 1 - 46
,{  9,  9,  9,  9,  9,  9 } // 1 2 0 2 - 47
,{  0,  1,  3,  9,  9,  9 } // 1 2 1 0 - 48 - 47
,{  9,  9,  9,  9,  9,  9 } // 1 2 1 1 - 49
,{  9,  9,  9,  9,  9,  9 } // 1 2 1 2 - 50
,{  2,  1,  3,  0,  9,  9 } // 1 2 2 0 - 51 - 37
,{  1,  3,  0,  9,  9,  9 } // 1 2 2 1 - 52 - 44
,{  1,  2,  3,  0,  9,  9 } // 1 2 2 2 - 53 - 35
,{  1,  0,  3,  2,  0,  9 } // 2 0 0 0 - 54 - 4
,{  1,  2,  0,  3,  9,  9 } // 2 0 0 1 - 55 - 16
,{ -1,  0,  3,  1,  2,  0 } // 2 0 0 2 - 56 - 10
,{  9,  9,  9,  9,  9,  9 } // 2 0 1 0 - 57
,{  9,  9,  9,  9,  9,  9 } // 2 0 1 1 - 58
,{  0,  3,  1,  2,  9,  9 } // 2 0 1 2 - 59 - 21
,{  9,  9,  9,  9,  9,  9 } // 2 0 2 0 - 60
,{  9,  9,  9,  9,  9,  9 } // 2 0 2 1 - 61
,{  0,  1,  2,  3,  1,  9 } // 2 0 2 2 - 62 - 1
,{  1,  3,  2,  0,  9,  9 } // 2 1 0 0 - 63 - 29
,{  1,  2,  0,  9,  9,  9 } // 2 1 0 1 - 64 - 42
,{  3,  1,  2,  0,  9,  9 } // 2 1 0 2 - 65 - 31
,{  9,  9,  9,  9,  9,  9 } // 2 1 1 0 - 66
,{  9,  9,  9,  9,  9,  9 } // 2 1 1 1 - 67
,{  0,  1,  2,  9,  9,  9 } // 2 1 1 2 - 68 - 45
,{  9,  9,  9,  9,  9,  9 } // 2 1 2 0 - 69
,{  9,  9,  9,  9,  9,  9 } // 2 1 2 1 - 70
,{  0,  1,  2,  3,  9,  9 } // 2 1 2 2 - 71 - 28
,{ -1,  0,  1,  3,  2,  0 } // 2 2 0 0 - 72 - 13
,{  3,  2,  0,  1,  9,  9 } // 2 2 0 1 - 73 - 19
,{  3,  0,  1,  2,  0,  9 } // 2 2 0 2 - 74 - 7
,{  2,  0,  1,  3,  9,  9 } // 2 2 1 0 - 75 - 24
,{  2,  0,  1,  9,  9,  9 } // 2 2 1 1 - 76 - 39
,{  3,  0,  1,  2,  9,  9 } // 2 2 1 2 - 77 - 26
,{  2,  0,  1,  3,  0,  9 } // 2 2 2 0 - 78 - 5
,{  2,  3,  0,  1,  9,  9 } // 2 2 2 1 - 79 - 17
,{ -1,  0,  1,  2,  3,  0 } // 2 2 2 2 - 80 - 11
};
